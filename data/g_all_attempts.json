[{"ErrorFlag":0,"Id":0,"studentId":670,"date":"2016-02-10 22:55:06.021756","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+(2*g(n-2))+(3*g(n-2))","after":null,"remaining":"1","SubmissionTime":"2016-02-10T22:55:06.021756","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+(2*g(n-2))+(3*g(n-3))","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","13","","# Error: expected","#     10","# but got","#     13","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":995,"date":"2016-02-11 16:38:27.920722","diff":null,"before":"\r\ndef g(n):\r\n    def helper(i):\r\n        i = n\r\n        if i<=3:\r\n            return i\r\n        else:\r\n            return helper(i-1)+2*helper(i-2)+3*helper(i-3)\r\n    return helper(n)","after":null,"remaining":"3","SubmissionTime":"2016-02-11T16:38:27.920722","SynthesizedAfter":"\r\ndef g(n):\r\n    def helper(i):\r\n        i\r\n        if i<=3:\r\n            return i\r\n        else:\r\n            return helper(i-1)+2*helper(i-2)+3*helper(i-3)\r\n    return helper(n)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Insert(node, ConstNode(BinaryExpressionNode-Subtract, Children(ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), SingleChild(LeafConstNode(ConstantExpressionNode-1)))), 1), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 40, in helper","    return helper(i-1) + 2 * helper(i-2) + 3 * helper(i-3)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 40, in helper","    return helper(i-1) + 2 * helper(i-2) + 3 * helper(i-3)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 40, in helper","    return helper(i-1) + 2 * helper(i-2) + 3 * helper(i-3)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 40, in helper","    return helper(i-1) + 2 * helper(i-2) + 3 * helper(i-3)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 40, in helper","    return helper(i-1) + 2 * helper(i-2) + 3 * helper(i-3)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 40, in helper","    return helper(i-1) + 2 * helper(i-2) + 3 * helper(i-3)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in helper","    if i <= 3:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     10","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":365,"date":"2016-02-10 11:44:34.512470","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    a = 0\r\n    def G(a):\r\n        nextnumber = n-1\r\n        result = (a*nextnumber)+(a+1)*(nextnumber-1)\r\n        if a+1==n or n-1==1:\r\n            return result\r\n        return G(a+1)\r\n    return G(a)","after":null,"remaining":"14","SubmissionTime":"2016-02-10T11:44:34.51247","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    a = 0\r\n    def G(a):\r\n        nextnumber = a-1\r\n        result = (a*nextnumber)+(a+1)*(nextnumber-1)\r\n        if a+1==n or n-1==1:\r\n            return result\r\n        return G(a+1)\r\n    return G(a)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(NameExpressionNode-a)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","17","","# Error: expected","#     10","# but got","#     17","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":541,"date":"2016-02-14 16:43:25.379569","diff":null,"before":"\r\ndef g(n):\r\n    if n>=3:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)\r\n    else:\r\n        return n","after":null,"remaining":"1","SubmissionTime":"2016-02-14T16:43:25.379569","SynthesizedAfter":"\r\ndef g(n):\r\n    if n>=4:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)\r\n    else:\r\n        return n","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","4","","# Error: expected","#     3","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":474,"date":"2016-02-16 22:24:13.384110","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-16T22:24:13.38411","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)e","Traceback (most recent call last):","    g(5)e","        ^","SyntaxError: invalid syntax","","# Error: expected","#     22","# but got","#     SyntaxError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":523,"date":"2016-02-10 19:19:46.440234","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    if n>3:\r\n        G = lambda n: n*g(n-1)+(n-1)*g(n-2)\r\n        return G(n)","after":null,"remaining":"32","SubmissionTime":"2016-02-10T19:19:46.440234","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    if n>3:\r\n        G = lambda n: n*g(n-3)+(n-1)*g(n-2)\r\n        return G(n)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","18","","# Error: expected","#     10","# but got","#     18","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":1018,"date":"2016-02-14 00:41:46.000695","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    def num(a, answer = 1):\r\n        if a<1:\r\n            return answer-1\r\n        else:\r\n            answer += a*g(n-a)\r\n            return num(a-1, answer)\r\n    return num(n)","after":null,"remaining":"3","SubmissionTime":"2016-02-14T00:41:46.000695","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    def num(a, answer = 1):\r\n        if a<1:\r\n            return answer-1\r\n        else:\r\n            answer += a*g(n-a)\r\n            return num(a-1, answer)\r\n    return num(3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","26","","# Error: expected","#     22","# but got","#     26","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":504,"date":"2016-02-16 20:28:14.642387","diff":null,"before":"\r\ndef g(n):\r\n    answer = 0\r\n    counter = 1\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        while n>=counter:\r\n            answer = answer+(g(n-counter)*counter)\r\n            counter += 1\r\n    return answer","after":null,"remaining":"4","SubmissionTime":"2016-02-16T20:28:14.642387","SynthesizedAfter":"\r\ndef g(n):\r\n    answer = 0\r\n    counter = 1\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        while 3>=counter:\r\n            answer = answer+(g(n-counter)*counter)\r\n            counter += 1\r\n    return answer","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","26","","# Error: expected","#     22","# but got","#     26","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":795,"date":"2016-02-11 11:20:12.446157","diff":null,"before":"\r\ndef g(n):\r\n    if 0<n<3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"2","SubmissionTime":"2016-02-11T11:20:12.446157","SynthesizedAfter":"\r\ndef g(n):\r\n    if 0<n<4:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 38, in g","    return g(n-1) + 2*g(n-2) + 3*g(n-3)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 38, in g","    return g(n-1) + 2*g(n-2) + 3*g(n-3)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 38, in g","    return g(n-1) + 2*g(n-2) + 3*g(n-3)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 38, in g","    return g(n-1) + 2*g(n-2) + 3*g(n-3)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 38, in g","    return g(n-1) + 2*g(n-2) + 3*g(n-3)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 38, in g","    return g(n-1) + 2*g(n-2) + 3*g(n-3)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in g","    if 0 < n < 3:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     3","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":1020,"date":"2016-02-16 15:26:20.816482","diff":null,"before":"\r\ndef g(n):\r\n    while n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-16T15:26:20.816482","SynthesizedAfter":"\r\ndef g(n):\r\n    while n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","22",">>> from construct_check import check",">>> check(HW_SOURCE_FILE, 'g', ['While', 'For'])","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 86, in check","    return ExclusionChecker(disallow).check(source_file, checked_funcs, source)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 170, in check","    p = parse(open(source_file).read(), source_file)","  File \"C:\\Users\\Gustavo\\Anaconda3\\lib\\ast.py\", line 35, in parse","    return compile(source, filename, mode, PyCF_ONLY_AST)","  File \"hw02.py\", line 1","    ???HW_SOURCE_FILE = 'hw02.py'","                    ^","SyntaxError: invalid character in identifier","","# Error: expected","#     True","# but got","#     SyntaxError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":335,"date":"2016-02-09 22:48:39.684735","diff":null,"before":"\r\ndef g(n):\r\n    total = 0\r\n    if n<=3:\r\n        return n\r\n    elif n>3:\r\n        for i in range(1, 4):\r\n            a = n-i\r\n            b = g(a)\r\n            total += i*b\r\n        return total","after":null,"remaining":"11","SubmissionTime":"2016-02-09T22:48:39.684735","SynthesizedAfter":"\r\ndef g(n):\r\n    total = 0\r\n    if n<=3:\r\n        return n\r\n    elif n>3:\r\n        for i in range(1, 4):\r\n            a = n-i\r\n            b = g(a)\r\n            total += i*b\r\n        return total","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-0)), Selected(\\x => Match(x, StartsWithParent(Node(AssignmentStatementNode, TChildren(LeafWildcard(\"NameExpressionNode\"), TChild(Target(LeafWildcard(\"ConstantExpressionNode\"))))))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","22",">>> from construct_check import check",">>> check(HW_SOURCE_FILE, 'g', ['While', 'For'])","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 86, in check","    return ExclusionChecker(disallow).check(source_file, checked_funcs, source)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 170, in check","    p = parse(open(source_file).read(), source_file)","  File \"C:\\Users\\Gustavo\\Anaconda3\\lib\\ast.py\", line 35, in parse","    return compile(source, filename, mode, PyCF_ONLY_AST)","  File \"hw02.py\", line 1","    ???HW_SOURCE_FILE = 'hw02.py'","                    ^","SyntaxError: invalid character in identifier","","# Error: expected","#     True","# but got","#     SyntaxError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":231,"date":"2016-02-16 21:33:37.709148","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+2*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-16T21:33:37.709148","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","9","","# Error: expected","#     10","# but got","#     9","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":506,"date":"2016-02-13 15:29:03.481992","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    def G(x, y):\r\n        if x>=n:\r\n            return 0\r\n        return x*y+G(x+1, y-1)\r\n    return G(0, n)-g(n-1)","after":null,"remaining":"29","SubmissionTime":"2016-02-13T15:29:03.481992","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    def G(x, y):\r\n        if x>=n:\r\n            return 1\r\n        return x*y+G(x+1, y-1)\r\n    return G(3, n)-g(n-1)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast))), Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-1)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","7","","# Error: expected","#     10","# but got","#     7","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":23,"date":"2016-02-15 15:33:42.894333","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-2)","after":null,"remaining":"1","SubmissionTime":"2016-02-15T15:33:42.894333","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","13","","# Error: expected","#     10","# but got","#     13","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":384,"date":"2016-02-12 13:56:17.524160","diff":null,"before":"\r\ndef g(n):\r\n    if n<3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-12T13:56:17.52416","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<4:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","4","","# Error: expected","#     3","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":1003,"date":"2016-02-11 14:36:39.970821","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    elif n>3:\r\n        return g(n-3)+(2*g(n-2))+(3*g(n-1))","after":null,"remaining":"1","SubmissionTime":"2016-02-11T14:36:39.970821","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    elif n>3:\r\n        return g(n-1)+(2*g(n-2))+(3*g(n-3))","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast))), Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-1)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","14","","# Error: expected","#     10","# but got","#     14","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":21,"date":"2016-02-09 15:38:41.509206","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    elif n>3:\r\n        return g(n-1)+2*g(n-2)+3*g(n-1)","after":null,"remaining":"1","SubmissionTime":"2016-02-09T15:38:41.509206","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    elif n>3:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","16","","# Error: expected","#     10","# but got","#     16","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":590,"date":"2016-02-15 21:42:46.165608","diff":null,"before":"\r\ndef g(n):\r\n    def G(n):\r\n        if n<=3:\r\n            return n\r\n        else:\r\n            print(n)\r\n            return G(n-1)+2*G(n-2)+3*G(n-3)\r\n    return G(n)","after":null,"remaining":"1","SubmissionTime":"2016-02-15T21:42:46.165608","SynthesizedAfter":"\r\ndef g(n):\r\n    def G(n):\r\n        if n<=3:\r\n            return n\r\n        else:\r\n            print(n)\r\n            return G(n-1)+2*G(n-2)+3*G(n-3)\r\n    return G(n)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","4","10","","# Error: expected","#     10","# but got","#     4","#     10","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":1068,"date":"2016-02-15 14:09:34.353270","diff":null,"before":"\r\ndef g(n):\r\n    if n<3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"2","SubmissionTime":"2016-02-15T14:09:34.35327","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<4:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","4","","# Error: expected","#     3","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":466,"date":"2016-02-15 16:14:25.125765","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        x = 3\r\n        total = 0\r\n        while x>0:\r\n            total += x*g(n-x)\r\n            x -= 1\r\n        return total","after":null,"remaining":"24","SubmissionTime":"2016-02-15T16:14:25.125765","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        x = 3\r\n        total = 0\r\n        while x>0:\r\n            total += x*g(n-x)\r\n            x -= 1\r\n        return total","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-0)), Selected(\\x => Match(x, StartsWithParent(Node(AssignmentStatementNode, TChildren(LeafWildcard(\"NameExpressionNode\"), TChild(Target(LeafWildcard(\"ConstantExpressionNode\"))))))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","22",">>> from construct_check import check",">>> check(HW_SOURCE_FILE, 'g', ['While', 'For'])","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 86, in check","    return ExclusionChecker(disallow).check(source_file, checked_funcs, source)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 170, in check","    p = parse(open(source_file).read(), source_file)","  File \"C:\\Users\\Gustavo\\Anaconda3\\lib\\ast.py\", line 35, in parse","    return compile(source, filename, mode, PyCF_ONLY_AST)","  File \"hw02.py\", line 1","    ???HW_SOURCE_FILE = 'hw02.py'","                    ^","SyntaxError: invalid character in identifier","","# Error: expected","#     True","# but got","#     SyntaxError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":1001,"date":"2016-02-15 21:22:49.054117","diff":null,"before":"\r\ndef g(n):\r\n    while n<=3:\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-15T21:22:49.054117","SynthesizedAfter":"\r\ndef g(n):\r\n    while n<=3:\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","22",">>> from construct_check import check",">>> check(HW_SOURCE_FILE, 'g', ['While', 'For'])","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 86, in check","    return ExclusionChecker(disallow).check(source_file, checked_funcs, source)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 170, in check","    p = parse(open(source_file).read(), source_file)","  File \"C:\\Users\\Gustavo\\Anaconda3\\lib\\ast.py\", line 35, in parse","    return compile(source, filename, mode, PyCF_ONLY_AST)","  File \"hw02.py\", line 1","    ???HW_SOURCE_FILE = 'hw02.py'","                    ^","SyntaxError: invalid character in identifier","","# Error: expected","#     True","# but got","#     SyntaxError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":589,"date":"2016-02-14 14:06:47.368795","diff":null,"before":"\r\ndef g(n):\r\n    k = 1\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        k = k+1\r\n        return g(n-1)+g(n-2)*k+g(n-3)*k","after":null,"remaining":"2","SubmissionTime":"2016-02-14T14:06:47.368795","SynthesizedAfter":"\r\ndef g(n):\r\n    k = 1\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        k = k+1\r\n        return g(n-1)+g(n-2)*k+g(n-3)*3","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","9","","# Error: expected","#     10","# but got","#     9","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":999,"date":"2016-02-14 14:17:29.859293","diff":null,"before":"\r\ndef g(n):\r\n    i = 1\r\n    if n<=i:\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"5","SubmissionTime":"2016-02-14T14:17:29.859293","SynthesizedAfter":"\r\ndef g(n):\r\n    i = 3\r\n    if n<=i:\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","-2","","# Error: expected","#     2","# but got","#     -2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":45,"date":"2016-02-08 12:02:41.343154","diff":null,"before":"\r\ndef g(n):\r\n    if n==0:\r\n        return 0\r\n    elif n<=3:\r\n        return n+g(n-1)\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"2","SubmissionTime":"2016-02-08T12:02:41.343154","SynthesizedAfter":"\r\ndef g(n):\r\n    if n==0:\r\n        return 0\r\n    elif n<=3:\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","3","","# Error: expected","#     2","# but got","#     3","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":987,"date":"2016-02-14 14:49:17.768828","diff":null,"before":"\r\ndef g(n):\r\n    while n>0:\r\n        if n<=3:\r\n            return n\r\n        elif n>3:\r\n            return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-14T14:49:17.768828","SynthesizedAfter":"\r\ndef g(n):\r\n    while n>0:\r\n        if n<=3:\r\n            return n\r\n        elif n>3:\r\n            return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","22",">>> from construct_check import check",">>> check(HW_SOURCE_FILE, 'g', ['While', 'For'])","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 86, in check","    return ExclusionChecker(disallow).check(source_file, checked_funcs, source)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 170, in check","    p = parse(open(source_file).read(), source_file)","  File \"C:\\Users\\Gustavo\\Anaconda3\\lib\\ast.py\", line 35, in parse","    return compile(source, filename, mode, PyCF_ONLY_AST)","  File \"hw02.py\", line 1","    ???HW_SOURCE_FILE = 'hw02.py'","                    ^","SyntaxError: invalid character in identifier","","# Error: expected","#     True","# but got","#     SyntaxError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":244,"date":"2016-02-16 11:12:11.667198","diff":null,"before":"\r\ndef g(n):\r\n    total = 1\r\n    coefficient = 1\r\n    runs = n-3\r\n    def totaler_3(n, coefficient, total, runs):\r\n        if runs>0:\r\n            return totaler_3(n-1, coefficient+1, coefficient*g(n-1)+total, runs-1)\r\n        else:\r\n            return total\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return totaler_3(n, coefficient, total, runs)+3*(runs+1)","after":null,"remaining":"1","SubmissionTime":"2016-02-16T11:12:11.667198","SynthesizedAfter":"\r\ndef g(n):\r\n    total = 1\r\n    coefficient = 1\r\n    runs = n-3\r\n    def totaler_3(n, coefficient, total, runs):\r\n        if runs>0:\r\n            return totaler_3(n-3, coefficient+1, coefficient*g(n-1)+total, runs-1)\r\n        else:\r\n            return total\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return totaler_3(n, coefficient, total, runs)+3*(runs+1)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","26","","# Error: expected","#     22","# but got","#     26","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":172,"date":"2016-02-15 10:21:32.819369","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    x, y, z = 1, 2, 3\r\n    while n>3:\r\n        x, y, z = y, z, z+2*y+3*x\r\n        n -= 1\r\n    return z","after":null,"remaining":"1","SubmissionTime":"2016-02-15T10:21:32.819369","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    x, y, z = 1, 2, 3\r\n    while n>3:\r\n        x, y, z = y, z, z+2*y+3*x\r\n        n -= 1\r\n    return z","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","22",">>> from construct_check import check",">>> check(HW_SOURCE_FILE, 'g', ['While', 'For'])","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 86, in check","    return ExclusionChecker(disallow).check(source_file, checked_funcs, source)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 170, in check","    p = parse(open(source_file).read(), source_file)","  File \"C:\\Users\\Gustavo\\Anaconda3\\lib\\ast.py\", line 35, in parse","    return compile(source, filename, mode, PyCF_ONLY_AST)","  File \"hw02.py\", line 1","    ???HW_SOURCE_FILE = 'hw02.py'","                    ^","SyntaxError: invalid character in identifier","","# Error: expected","#     True","# but got","#     SyntaxError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":802,"date":"2016-02-16 13:16:49.977054","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return g(n)\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-16T13:16:49.977054","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithParent(Node(SuiteStatementNode, TChild(Target(LeafWildcard(\"any\")))))), InOrderSort(ast))), Patch(EditMap(\\node => Update(node, ConstNode(ReturnStatementNode, SingleChild(ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK)))), Selected(\\x => Match(x, StartsWithParent(Node(SuiteStatementNode, TChild(Target(LeafWildcard(\"any\")))))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in g","    return g(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in g","    return g(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in g","    return g(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in g","    return g(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in g","    return g(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in g","    return g(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in g","    if n <= 3:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     1","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":49,"date":"2016-02-16 17:17:51.941737","diff":null,"before":"\r\ndef g(n):\r\n    def recurse(n2, count, const):\r\n        if count==1:\r\n            return 3*g(n2-3)\r\n        else:\r\n            return (const*g(n2-1))+recurse((n2-1), (count-1), (const+1))\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return recurse(n, 3, 1)","after":null,"remaining":"5","SubmissionTime":"2016-02-16T17:17:51.941737","SynthesizedAfter":"\r\ndef g(n):\r\n    def recurse(n2, count, const):\r\n        if count==1:\r\n            return 3*g(n-3)\r\n        else:\r\n            return (const*g(n2-1))+recurse((n2-1), (count-1), (const+1))\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return recurse(n, 3, 1)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(NameExpressionNode-n)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","4","","# Error: expected","#     10","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":677,"date":"2016-02-11 15:21:10.173273","diff":null,"before":"\r\ndef g(n):\r\n    def multiplier(x):\r\n        if n<=3:\r\n            return n\r\n        if x>3:\r\n            return 0\r\n        else:\r\n            return x*g(n-x)+multiplier(x-1)\r\n    return multiplier(1)","after":null,"remaining":"1","SubmissionTime":"2016-02-11T15:21:10.173273","SynthesizedAfter":"\r\ndef g(n):\r\n    def multiplier(x):\r\n        if n<=3:\r\n            return n\r\n        if x>3:\r\n            return 0\r\n        else:\r\n            return x*g(n-x)+multiplier(x+1)\r\n    return multiplier(1)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-1)), Selected(\\x => Match(x, StartsWithParent(Node(BinaryExpressionNode-Subtract, TChildren(LeafWildcard(\"NameExpressionNode\"), TChild(Target(LeafWildcard(\"ConstantExpressionNode\"))))))), InOrderSort(ast))), Patch(EditMap(\\node => Update(node, ConstNode(BinaryExpressionNode-Add, Children(ReferenceNode(node, StartsWithParent(Node(BinaryExpressionNode-Subtract, TChildren(Target(LeafWildcard(\"NameExpressionNode\")), TChild(LeafWildcard(\"ConstantExpressionNode\"))))), Tutor.synthesis.MagicK), SingleChild(LeafConstNode(ConstantExpressionNode-1))))), Selected(\\x => Match(x, StartsWithParent(Node(ArgNode, TChild(Target(Node(BinaryExpressionNode-Subtract, TChildren(LeafWildcard(\"NameExpressionNode\"), TChild(LeafWildcard(\"ConstantExpressionNode\"))))))))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 42, in g","    return multiplier(1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 41, in multiplier","    return x*g(n-x) + multiplier(x-1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 41, in multiplier","    return x*g(n-x) + multiplier(x-1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 42, in g","    return multiplier(1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 41, in multiplier","    return x*g(n-x) + multiplier(x-1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 42, in g","    return multiplier(1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in multiplier","    if n <= 3:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     10","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":1071,"date":"2016-02-11 17:45:27.850651","diff":null,"before":"\r\ndef g(n):\r\n    other_num = 1\r\n    if n<=3:\r\n        return (n)\r\n    else:\r\n        i += 1\r\n        other_num += 1\r\n        return (g(n-1))+g(n-other_num)*2+(g(n-3))*3","after":null,"remaining":"1","SubmissionTime":"2016-02-11T17:45:27.850651","SynthesizedAfter":"\r\ndef g(n):\r\n    other_num = 1\r\n    if n<=3:\r\n        return (n)\r\n    else:\r\n        i = 1\r\n        other_num += 1\r\n        return (g(n-1))+g(n-other_num)*2+(g(n-3))*3","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, ConstNode(AssignmentStatementNode, Children(ReferenceNode(node, StartsWithParent(Node(AugmentedAssignStatementNode-Add, TChildren(Target(LeafWildcard(\"NameExpressionNode\")), TChild(LeafWildcard(\"any\"))))), Tutor.synthesis.MagicK), SingleChild(ReferenceNode(node, StartsWithParent(Node(AugmentedAssignStatementNode-Add, TChildren(LeafWildcard(\"NameExpressionNode\"), TChild(Target(LeafWildcard(\"any\")))))), Tutor.synthesis.MagicK))))), Selected(\\x => Match(x, StartsWithTarget(Target(Node(AugmentedAssignStatementNode-Add, TChildren(LeafWildcard(\"NameExpressionNode\"), TChild(LeafWildcard(\"any\"))))))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 40, in g","    i+=1","UnboundLocalError: local variable 'i' referenced before assignment","","# Error: expected","#     10","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":656,"date":"2016-02-13 14:20:51.749931","diff":null,"before":"\r\ndef g(n):\r\n    def counter(i, total):\r\n        if n<=3:\r\n            return n\r\n        elif i==3:\r\n            return total\r\n        else:\r\n            total = total+i*g(n-i)\r\n            return counter(i+1, total)\r\n    return counter(1, 0)","after":null,"remaining":"1","SubmissionTime":"2016-02-13T14:20:51.749931","SynthesizedAfter":"\r\ndef g(n):\r\n    def counter(i, total):\r\n        if n<=3:\r\n            return n\r\n        elif i==4:\r\n            return total\r\n        else:\r\n            total = total+i*g(n-i)\r\n            return counter(i+1, total)\r\n    return counter(1, 0)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","7","","# Error: expected","#     10","# but got","#     7","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":208,"date":"2016-02-13 23:00:54.654672","diff":null,"before":"\r\ndef g(n):\r\n    if n<3:\r\n        return n\r\n    else:\r\n        return g(n-1)+(2*g(n-2))+(3*g(n-3))","after":null,"remaining":"1","SubmissionTime":"2016-02-13T23:00:54.654672","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<4:\r\n        return n\r\n    else:\r\n        return g(n-1)+(2*g(n-2))+(3*g(n-3))","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","4","","# Error: expected","#     3","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":507,"date":"2016-02-15 19:11:09.898766","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    print(n-1)\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-15T19:11:09.898766","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    print(n-1)\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","3","10","","# Error: expected","#     10","# but got","#     3","#     10","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":981,"date":"2016-02-12 11:41:36.787773","diff":null,"before":"\r\ndef g(n):\r\n    if (n<=3):\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-12T11:41:36.787773","SynthesizedAfter":"\r\ndef g(n):\r\n    if (n<=3):\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","22","","# Error: expected","#     22 n = 5, 432","# but got","#     22","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":986,"date":"2016-02-09 11:24:42.920993","diff":null,"before":"\r\ndef g(n):\r\n    if n<3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-09T11:24:42.920993","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<4:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","4","","# Error: expected","#     3","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":984,"date":"2016-02-14 12:46:00.741357","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-14T12:46:00.741357","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2","","# Error: expected","#     2","#     s>> g(3)","#     3","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":12,"date":"2016-02-16 20:57:21.318415","diff":null,"before":"\r\ndef g(n):\r\n    i = 2\r\n    k = 3\r\n    j = 4\r\n    if n>3:\r\n        n = n-1\r\n        while n>0:\r\n            return g(n)+i*g(n-1)+k*g(n-2)+j\r\n            i += 1\r\n            k += 1\r\n            j += 1\r\n    else:\r\n        return n","after":null,"remaining":"5","SubmissionTime":"2016-02-16T20:57:21.318415","SynthesizedAfter":"\r\ndef g(n):\r\n    i = 2\r\n    k = 3\r\n    j = 0\r\n    if n>3:\r\n        n = n-1\r\n        while n>0:\r\n            return g(n)+i*g(n-1)+k*g(n-2)+j\r\n            i += 1\r\n            k += 1\r\n            j += 1\r\n    else:\r\n        return n","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-0)), Selected(\\x => Match(x, StartsWithParent(Node(AssignmentStatementNode, TChildren(LeafWildcard(\"NameExpressionNode\"), TChild(Target(LeafWildcard(\"ConstantExpressionNode\"))))))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","14","","# Error: expected","#     10","# but got","#     14","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":567,"date":"2016-02-16 17:50:08.337900","diff":null,"before":"\r\ndef g(n):\r\n    if n<3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-16T17:50:08.3379","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<4:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","4","","# Error: expected","#     3","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":724,"date":"2016-02-14 15:47:43.425571","diff":null,"before":"\r\ndef g(n):\r\n    x = 1\r\n    if n<=3:\r\n        return n\r\n    elif n==4:\r\n        return n+(x+1)*g(n-1)\r\n    elif n==5:\r\n        x += 1\r\n        return n+(x+1)*g(n-1)+(x+2)*g(n-2)","after":null,"remaining":"3","SubmissionTime":"2016-02-14T15:47:43.425571","SynthesizedAfter":"\r\ndef g(n):\r\n    x = 1\r\n    if n<=3:\r\n        return n\r\n    elif n==4:\r\n        return n+(x+1)*g(n-1)\r\n    elif n==5:\r\n        x += 1\r\n        return n+n+(x+2)*g(n-2)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","47","","# Error: expected","#     22","# but got","#     47","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":369,"date":"2016-02-16 07:39:05.857821","diff":null,"before":"\r\ndef g(n):\r\n    if g<=3:\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-16T07:39:05.857821","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(NameExpressionNode-n)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in g","    if g <= 3:","TypeError: unorderable types: function() <= int()","","# Error: expected","#     1","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":906,"date":"2016-02-15 16:06:34.894929","diff":null,"before":"\r\ndef g(n):\r\n    def nest(i):\r\n        if i>n:\r\n            return 0\r\n        return i*g(n-i)+nest(i+1)\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return nest(1)","after":null,"remaining":"3","SubmissionTime":"2016-02-15T16:06:34.894929","SynthesizedAfter":"\r\ndef g(n):\r\n    def nest(i):\r\n        if i>3:\r\n            return 0\r\n        return i*g(n-i)+nest(i+1)\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return nest(1)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","26","","# Error: expected","#     22","# but got","#     26","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":998,"date":"2016-02-16 22:38:38.025978","diff":null,"before":"\r\ndef g(n):\r\n    if n<3:\r\n        return n\r\n    else:\r\n        return g(n-1)+(2*g(n-2))+(3*g(n-3))","after":null,"remaining":"1","SubmissionTime":"2016-02-16T22:38:38.025978","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<4:\r\n        return n\r\n    else:\r\n        return g(n-1)+(2*g(n-2))+(3*g(n-3))","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","4","","# Error: expected","#     3","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":319,"date":"2016-02-09 23:15:59.287739","diff":null,"before":"\r\ndef g(n):\r\n    if n<4:\r\n        return n\r\n    tot = 0\r\n    for i in range(1, 4):\r\n        tot += i*g(n-i)\r\n    return tot","after":null,"remaining":"1","SubmissionTime":"2016-02-09T23:15:59.287739","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<4:\r\n        return n\r\n    tot = 0\r\n    for i in range(1, 4):\r\n        tot += i*g(n-i)\r\n    return tot","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-0)), Selected(\\x => Match(x, StartsWithParent(Node(AssignmentStatementNode, TChildren(LeafWildcard(\"NameExpressionNode\"), TChild(Target(LeafWildcard(\"ConstantExpressionNode\"))))))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","22",">>> from construct_check import check",">>> check(HW_SOURCE_FILE, 'g', ['While', 'For'])","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 86, in check","    return ExclusionChecker(disallow).check(source_file, checked_funcs, source)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 170, in check","    p = parse(open(source_file).read(), source_file)","  File \"C:\\Users\\Gustavo\\Anaconda3\\lib\\ast.py\", line 35, in parse","    return compile(source, filename, mode, PyCF_ONLY_AST)","  File \"hw02.py\", line 1","    ???HW_SOURCE_FILE = 'hw02.py'","                    ^","SyntaxError: invalid character in identifier","","# Error: expected","#     True","# but got","#     SyntaxError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":736,"date":"2016-02-11 17:27:05.695198","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        print(n)\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"2","SubmissionTime":"2016-02-11T17:27:05.695198","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        print(n)\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","4","10","","# Error: expected","#     10","# but got","#     4","#     10","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":149,"date":"2016-02-15 11:41:15.016772","diff":null,"before":"\r\ndef g(n):\r\n    a = 1\r\n    if n<=3:\r\n        return n\r\n    def g_help(a, n):\r\n        if n>=1:\r\n            return a*n+g_help(a+1, n-1)\r\n        return 0\r\n    return g_help(a, n)","after":null,"remaining":"3","SubmissionTime":"2016-02-15T11:41:15.016772","SynthesizedAfter":"\r\ndef g(n):\r\n    a = 1\r\n    if n<=3:\r\n        return n\r\n    def g_help(a, n):\r\n        if n>=3:\r\n            return a*n+g_help(a+1, n-1)\r\n        return 0\r\n    return g_help(a, n)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","20","","# Error: expected","#     10","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":383,"date":"2016-02-12 13:56:17.524160","diff":null,"before":"\r\ndef g(n):\r\n    if n<3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-12T13:56:17.52416","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<4:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","4","","# Error: expected","#     3","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":104,"date":"2016-02-13 22:50:57.380671","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*(g-3)","after":null,"remaining":"8","SubmissionTime":"2016-02-13T22:50:57.380671","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(NameExpressionNode-n)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 38, in g","    return g(n-1) + 2 * g(n-2) + 3*(g-3)","TypeError: unsupported operand type(s) for -: 'function' and 'int'","","# Error: expected","#     10","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":787,"date":"2016-02-16 14:13:40.527570","diff":null,"before":"\r\ndef g(n):\r\n    if n>=3:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)\r\n    else:\r\n        return n","after":null,"remaining":"1","SubmissionTime":"2016-02-16T14:13:40.52757","SynthesizedAfter":"\r\ndef g(n):\r\n    if n>=4:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)\r\n    else:\r\n        return n","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","4","","# Error: expected","#     3","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":190,"date":"2016-02-16 17:21:24.298945","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)+4","after":null,"remaining":"1","SubmissionTime":"2016-02-16T17:21:24.298945","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    return g(n-1)+2*g(n-4)+3*g(n-3)+4","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","14","","# Error: expected","#     10","# but got","#     14","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":726,"date":"2016-02-16 18:27:18.943950","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    a, b, c = 1, 2, 3\r\n    for i in range(3, n):\r\n        a, b, c = b, c, (a*3+b*2+c)\r\n    return c","after":null,"remaining":"4","SubmissionTime":"2016-02-16T18:27:18.94395","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    a, b, c = 1, 2, 3\r\n    for i in range(3, n):\r\n        a, b, c = b, c, (a*3+b*2+c)\r\n    return c","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","22",">>> from construct_check import check",">>> check(HW_SOURCE_FILE, 'g', ['While', 'For'])","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 86, in check","    return ExclusionChecker(disallow).check(source_file, checked_funcs, source)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 170, in check","    p = parse(open(source_file).read(), source_file)","  File \"C:\\Users\\Gustavo\\Anaconda3\\lib\\ast.py\", line 35, in parse","    return compile(source, filename, mode, PyCF_ONLY_AST)","  File \"hw02.py\", line 1","    ???HW_SOURCE_FILE = 'hw02.py'","                    ^","SyntaxError: invalid character in identifier","","# Error: expected","#     True","# but got","#     SyntaxError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":53,"date":"2016-02-16 00:22:12.243398","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        total = g(n-1)+2*g(n-2)+3*g(n-3)\r\n        return total-1","after":null,"remaining":"1","SubmissionTime":"2016-02-16T00:22:12.243398","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        total = g(n-1)+2*g(n-2)+3*g(n-3)\r\n        return total","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","9","","# Error: expected","#     10","# but got","#     9","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":958,"date":"2016-02-11 12:18:20.757167","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return 3\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-11T12:18:20.757167","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(NameExpressionNode-n)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","3","","# Error: expected","#     1","# but got","#     3","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":551,"date":"2016-02-13 14:41:05.136183","diff":null,"before":"\r\ndef g(n):\r\n    def G_helper(n, i):\r\n        if n<=3:\r\n            return n\r\n        if n>3:\r\n            if i==n:\r\n                return \r\n            else:\r\n                return G_helper(n-1, n-1)+2*G_helper(n-2, n-1)+3*G_helper(n-3, n-1)\r\n    return G_helper(n, n)","after":null,"remaining":"1","SubmissionTime":"2016-02-13T14:41:05.136183","SynthesizedAfter":"\r\ndef g(n):\r\n    def G_helper(n, i):\r\n        if n<=3:\r\n            return n\r\n        if n>3:\r\n            if 3==n:\r\n                return \r\n            else:\r\n                return G_helper(n-1, n-1)+2*G_helper(n-2, n-1)+3*G_helper(n-3, n-1)\r\n    return G_helper(n, n)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","","# Error: expected","#     10","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":477,"date":"2016-02-16 16:59:19.778005","diff":null,"before":"\r\ndef g(n):\r\n    def coefficient_func(x, m):\r\n        maximu = m\r\n        if x==maximu:\r\n            return x\r\n        elif m==3:\r\n            return x*m\r\n        else:\r\n            return x*m+coefficient_func(x+1, m-1)\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return coefficient_func(1, n)","after":null,"remaining":"3","SubmissionTime":"2016-02-16T16:59:19.778005","SynthesizedAfter":"\r\ndef g(n):\r\n    def coefficient_func(x, m):\r\n        maximu = n\r\n        if x==maximu:\r\n            return x\r\n        elif m==3:\r\n            return x*m\r\n        else:\r\n            return x*m+coefficient_func(x+1, m-1)\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return coefficient_func(1, n)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(NameExpressionNode-n)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","","# Error: expected","#     10","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":756,"date":"2016-02-16 20:54:19.133604","diff":null,"before":"\r\ndef g(n):\r\n    if n<3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-16T20:54:19.133604","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<4:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","4","","# Error: expected","#     3","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":628,"date":"2016-02-16 20:57:42.855448","diff":null,"before":"\r\ndef g(n):\r\n    def counter(i, n, total):\r\n        while i<4:\r\n            total = total+i*g(n-i)\r\n            i += 1\r\n        return total\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return counter(1, n, 0)","after":null,"remaining":"6","SubmissionTime":"2016-02-16T20:57:42.855448","SynthesizedAfter":"\r\ndef g(n):\r\n    def counter(i, n, total):\r\n        while i<4:\r\n            total = total = total+i*g(n-i)\r\n            i += 1\r\n        return total\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return counter(1, n, 0)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","10",">>> g(5)","22",">>> from construct_check import check",">>> check(HW_SOURCE_FILE, 'g', ['While', 'For'])","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 86, in check","    return ExclusionChecker(disallow).check(source_file, checked_funcs, source)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\construct_check.py\", line 170, in check","    p = parse(open(source_file).read(), source_file)","  File \"C:\\Users\\Gustavo\\Anaconda3\\lib\\ast.py\", line 35, in parse","    return compile(source, filename, mode, PyCF_ONLY_AST)","  File \"hw02.py\", line 1","    ???HW_SOURCE_FILE = 'hw02.py'","                    ^","SyntaxError: invalid character in identifier","","# Error: expected","#     True","# but got","#     SyntaxError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":141,"date":"2016-02-14 14:33:45.910778","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)*1+g(n-2)*2+g(n-3)*2","after":null,"remaining":"1","SubmissionTime":"2016-02-14T14:33:45.910778","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)*1+g(n-2)*2+g(n-3)*3","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","9","","# Error: expected","#     10","# but got","#     9","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":293,"date":"2016-02-11 20:22:23.503478","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return 3\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-11T20:22:23.503478","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(NameExpressionNode-n)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","3","","# Error: expected","#     1","# but got","#     3","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":779,"date":"2016-02-14 13:48:20.940537","diff":null,"before":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return (n-1)+2*(n-2)+3*(n-3)+g(n-1)","after":null,"remaining":"1","SubmissionTime":"2016-02-14T13:48:20.940537","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return (n-n)+2*(n-2)+3*(n-3)+g(n-1)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","3",">>> g(4)","13","","# Error: expected","#     10","# but got","#     13","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":290,"date":"2016-02-13 11:28:07.966804","diff":null,"before":"\r\ndef g(n):\r\n    while n>2:\r\n        return \r\n    if n<=3:\r\n        return identity(n)\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-13T11:28:07.966804","SynthesizedAfter":"\r\ndef g(n):\r\n    while n>n:\r\n        return \r\n    if n<=3:\r\n        return identity(n)\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, CPatch(EditMap(\\node => Delete(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"BinaryExpressionNode\"))), Tutor.synthesis.MagicK)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))), Patch(EditMap(\\node => Move(node, ReferenceNode(node, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\"))), Tutor.synthesis.MagicK), 0), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"any\")))), InOrderSort(ast))))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","","# Error: expected","#     3","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":815,"date":"2016-02-11 16:08:07.603143","diff":null,"before":"\r\ndef g(n):\r\n    if n<3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-11T16:08:07.603143","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<4:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","4","","# Error: expected","#     3","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":303,"date":"2016-02-16 20:55:55.328687","diff":null,"before":"\r\ndef g(n):\r\n    if q<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-16T20:55:55.328687","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(NameExpressionNode-n)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in g","    if q<=3:","NameError: name 'q' is not defined","","# Error: expected","#     1","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":326,"date":"2016-02-11 18:23:33.985674","diff":null,"before":"\r\ndef g(n):\r\n    while n==3:\r\n        return 1\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"1","SubmissionTime":"2016-02-11T18:23:33.985674","SynthesizedAfter":"\r\ndef g(n):\r\n    while n==3:\r\n        return 3\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-3)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","1","","# Error: expected","#     3","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":642,"date":"2016-02-15 21:22:40.085892","diff":null,"before":"\r\ndef g(n):\r\n    if g<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"2","SubmissionTime":"2016-02-15T21:22:40.085892","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<=3:\r\n        return n\r\n    else:\r\n        return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(NameExpressionNode-n)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"NameExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in g","    if g<=3:","TypeError: unorderable types: function() <= int()","","# Error: expected","#     1","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":0,"studentId":248,"date":"2016-02-14 16:53:33.289659","diff":null,"before":"\r\ndef g(n):\r\n    if n<3:\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","after":null,"remaining":"2","SubmissionTime":"2016-02-14T16:53:33.289659","SynthesizedAfter":"\r\ndef g(n):\r\n    if n<4:\r\n        return n\r\n    return g(n-1)+2*g(n-2)+3*g(n-3)","IsFixed":true,"GeneratedFix":null,"UsedFix":"Apply(ast, Patch(EditMap(\\node => Update(node, LeafConstNode(ConstantExpressionNode-4)), Selected(\\x => Match(x, StartsWithTarget(Target(LeafWildcard(\"ConstantExpressionNode\")))), InOrderSort(ast)))))","failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for g","",">>> from hw02 import *",">>> g(1)","1",">>> g(2)","2",">>> g(3)","4","","# Error: expected","#     3","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]}]